给你两个 非空 链表来代表两个非负整数。数字最高位位于链表开始位置。它们的每个节点只存储一位数字。将这两数相加会返回一个新的链表。

你可以假设除了数字 0 之外，这两个数字都不会以零开头。

 

进阶：

如果输入链表不能修改该如何处理？换句话说，你不能对列表中的节点进行翻转。

 

示例：

输入：(7 -> 2 -> 4 -> 3) + (5 -> 6 -> 4)
输出：7 -> 8 -> 0 -> 7

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/add-two-numbers-ii
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。


解法：

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */


struct ListNode* addTwoNumbers(struct ListNode* l1, struct ListNode* l2){
    int arr1[100], arr2[100];
    int i=0, j=0;
    struct ListNode *p = l1, *q = l2;
    while(p){
        arr1[i++] = p->val;
        p = p->next;
    }
    while(q){
        arr2[j++] = q->val;
        q = q->next;
    }
    --i;--j;
    int c=0;
    int ans[100], ansi = 0;
    while(i>=0 && j>=0){
        ans[ansi++] = (arr1[i]+arr2[j]+c)%10;
        c = (arr1[i]+arr2[j]+c)/10;
        --i;--j;
    }
    while(i>=0){
        ans[ansi++] = (arr1[i]+c)%10;
        c = (arr1[i--]+c)/10;  
    }
    while(j>=0){
        ans[ansi++] = (arr2[j]+c)%10;
        c = (arr2[j--]+c)/10;   
    }
    if(c==1)
        ans[ansi++] = 1;
    struct ListNode *h = (struct ListNode*)malloc(sizeof(struct ListNode));
    h->val = ans[--ansi];
    h->next = NULL;
    p = h; 
    for(--ansi; ansi>=0; --ansi){
        q = (struct ListNode*)malloc(sizeof(struct ListNode));
        q->val = ans[ansi];
        q->next = NULL;  
        p->next = q;
        p = q;      
    }
    return h;
}